8 - [1.5 Pontos] Descreva com suas palavras o que é o loop de eventos no contexto do
Node.js. Explique como ele funciona para permitir operações assíncronas não
bloqueantes, mencionando os tipos de tarefas que são processadas em cada fase do
loop de eventos. Como o loop de eventos se relaciona com a eficiência do Node.js em
lidar com I/O assíncrono?

R: O loop de eventos no Node.js é como um maestro para operações assíncronas. Ele permite que o Node.js faça várias coisas 
ao mesmo tempo sem travar. Funciona em várias etapas, cada uma lidando com diferentes tipos de tarefas: temporizadores (setTimeout), 
callbacks pendentes, I/O (como leitura de arquivos ou conexões de rede), entre outras.
Ele ajuda o Node.js a ser eficiente porque não fica esperando operações demoradas como leitura de arquivos 
ou acesso à internet terminarem. Em vez disso, continua trabalhando em outras coisas e volta para essas operações 
quando estiverem prontas.

9 - [1.5 Pontos] Explique com suas palavras o papel da engine V8 e da biblioteca libuv no
funcionamento do Node.js. Como cada uma dessas componentes contribui para a
execução de código JavaScript e operações de I/O assíncronas, respectivamente?
Discuta como a interação entre V8 e libuv permite que o Node.js ofereça um
desempenho eficiente para aplicações web.

R: O V8 e a libuv são como uma dupla dinâmica no Node.js. O V8 é o motor que faz o JavaScript rodar rápido, convertendo o 
código para a linguagem que o computador entende. Já a libuv cuida de operações como ler arquivos e gerenciar conexões de rede, 
garantindo que o Node.js possa trabalhar em várias tarefas ao mesmo tempo sem travar.
A interação entre eles é o que faz o Node.js tão eficiente para aplicações web: o V8 executa o JavaScript rápido e a libuv garante 
que o servidor fique sempre trabalhando, mesmo quando operações de I/O estão acontecendo.